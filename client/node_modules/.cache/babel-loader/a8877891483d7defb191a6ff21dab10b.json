{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/client/src/components/NoteDashboard.jsx\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  // Gets userID from the paramter\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([{\n    title: \"\",\n    content: \"\"\n  }]); // Gets user information from DB\n\n  useState(() => {\n    axios.get(\"/user\").then(response => {\n      const currentUser = response.data.find(user => user._id === userId);\n      const currentTodoList = currentUser.todoList;\n      setCurrentNotes(currentTodoList);\n    });\n  }, [userId]); // Adds new Note to currentNotes\n\n  function addNote(newNote) {\n    setCurrentNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  } // Deletes Note\n\n\n  function deleteNote(noteIndex) {\n    setCurrentNotes(prevNotes => {\n      return prevNotes.filter((note, index) => {\n        return index !== noteIndex;\n      });\n    });\n  }\n\n  function editNote(id, editedNote) {\n    console.log(\"editedNote: \" + editedNote);\n    console.log(\"id: \" + id);\n    setCurrentNotes(prevNotes => {\n      const updateNote = prevNotes.find(note => note._id === id);\n      updateNote.title = editedNote.editTitle;\n      updateNote.content = editedNote.editContent;\n      console.log(updateNote);\n    });\n  }\n\n  console.log(\"Current Notes: \" + currentNotes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    id: userId,\n    key: userId,\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), currentNotes.map((note, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      userId: userId,\n      noteId: note._id,\n      index: index,\n      title: note.title,\n      content: note.content,\n      deleteNote: deleteNote,\n      onEdit: editNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NoteDashboard;","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/client/src/components/NoteDashboard.jsx"],"names":["React","useState","axios","Header","Footer","CreateArea","Note","NoteDashboard","props","userId","match","params","id","currentNotes","setCurrentNotes","title","content","get","then","response","currentUser","data","find","user","_id","currentTodoList","todoList","addNote","newNote","prevNotes","deleteNote","noteIndex","filter","note","index","editNote","editedNote","console","log","updateNote","editTitle","editContent","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  // Gets userID from the paramter\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([\n    {\n      title: \"\",\n      content: \"\",\n    },\n  ]);\n\n  // Gets user information from DB\n  useState(() => {\n    axios.get(\"/user\").then((response) => {\n      const currentUser = response.data.find((user) => user._id === userId);\n      const currentTodoList = currentUser.todoList;\n      setCurrentNotes(currentTodoList);\n    });\n  }, [userId]);\n\n  // Adds new Note to currentNotes\n  function addNote(newNote) {\n    setCurrentNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  // Deletes Note\n  function deleteNote(noteIndex) {\n    setCurrentNotes((prevNotes) => {\n      return prevNotes.filter((note, index) => {\n        return index !== noteIndex;\n      });\n    });\n  }\n\n  function editNote(id, editedNote) {\n    console.log(\"editedNote: \" + editedNote);\n    console.log(\"id: \" + id);\n\n    setCurrentNotes((prevNotes) => {\n      const updateNote = prevNotes.find((note) => note._id === id);\n      updateNote.title = editedNote.editTitle;\n      updateNote.content = editedNote.editContent;\n      console.log(updateNote);\n    });\n  }\n\n  console.log(\"Current Notes: \" + currentNotes);\n\n  return (\n    <div>\n      <Header />\n      <CreateArea id={userId} key={userId} onAdd={addNote} />\n      {currentNotes.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            userId={userId}\n            noteId={note._id}\n            index={index}\n            title={note.title}\n            content={note.content}\n            deleteNote={deleteNote}\n            onEdit={editNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoteDashboard;\n"]},"metadata":{},"sourceType":"module"}