{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/src/components/NoteDashboard.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  const location = useLocation();\n  const id = location.state.userId;\n  const [users, setUsers] = useState([]);\n  const [currentNote, setCurrentNote] = useState([{\n    title: \"\",\n    content: \"\"\n  }]); // Gets user information from db\n\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"http://localhost:5000/user/\").then(response => {\n        console.log(response.data[1]._id);\n        setUsers(response.data);\n      }, 1000);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), users.map((user, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      noteId: user.todoList._id,\n      title: user.todoList.title,\n      content: user.todoList.content // onDelete={deleteNote}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NoteDashboard; // Receives data from backend\n// Equivilent to componendDidMount componentDidUpdate\n// Adding [] at the end makes it act like componentDidMount, runs only once\n// function deleteNote(id) {\n//   axios\n//     .delete(\"http://localhost:5000/list/\" + id)\n//     .then((res) => console.log(res.data));\n//   // Need to refresh page in order to display deleted item from homepage\n//   setNotes((prevNotes) => {\n//     return prevNotes.filter((noteItem, index) => {\n//       return index !== id;\n//     });\n//   });\n//   window.location.reload();\n// }\n// return (\n// );\n// export default class NoteDashboard extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <CreateArea />\n//         <Note />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/src/components/NoteDashboard.jsx"],"names":["React","useState","useEffect","useLocation","axios","Header","Footer","CreateArea","Note","NoteDashboard","props","location","id","state","userId","users","setUsers","currentNote","setCurrentNote","title","content","setTimeout","get","then","response","console","log","data","_id","map","user","index","todoList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,CAC7C;AACEkB,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,OAAO,EAAE;AAFX,GAD6C,CAAD,CAA9C,CAJ4B,CAW5B;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAAC,MAAM;AACfjB,MAAAA,KAAK,CAACkB,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,GAA7B;AACAZ,QAAAA,QAAQ,CAACQ,QAAQ,CAACG,IAAV,CAAR;AACD,OAHD,EAGG,IAHH;AAID,KALS,CAAV;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGZ,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,MAAM,EAAED,IAAI,CAACE,QAAL,CAAcJ,GAFxB;AAGE,MAAA,KAAK,EAAEE,IAAI,CAACE,QAAL,CAAcb,KAHvB;AAIE,MAAA,OAAO,EAAEW,IAAI,CAACE,QAAL,CAAcZ,OAJzB,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CAHH,eAcE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD;;AAED,eAAeX,aAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  const location = useLocation();\n  const id = location.state.userId;\n  const [users, setUsers] = useState([]);\n  const [currentNote, setCurrentNote] = useState([\n    {\n      title: \"\",\n      content: \"\",\n    },\n  ]);\n\n  // Gets user information from db\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"http://localhost:5000/user/\").then((response) => {\n        console.log(response.data[1]._id);\n        setUsers(response.data);\n      }, 1000);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <CreateArea />\n      {users.map((user, index) => {\n        return (\n          <Note\n            key={index}\n            noteId={user.todoList._id}\n            title={user.todoList.title}\n            content={user.todoList.content}\n            // onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoteDashboard;\n\n// Receives data from backend\n// Equivilent to componendDidMount componentDidUpdate\n// Adding [] at the end makes it act like componentDidMount, runs only once\n\n// function deleteNote(id) {\n//   axios\n//     .delete(\"http://localhost:5000/list/\" + id)\n//     .then((res) => console.log(res.data));\n\n//   // Need to refresh page in order to display deleted item from homepage\n//   setNotes((prevNotes) => {\n//     return prevNotes.filter((noteItem, index) => {\n//       return index !== id;\n//     });\n//   });\n\n//   window.location.reload();\n// }\n\n// return (\n\n// );\n\n// export default class NoteDashboard extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {};\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <CreateArea />\n//         <Note />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}