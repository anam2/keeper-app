{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/client/src/components/CreateAccount.jsx\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Container, CssBaseline, Avatar, TextField, Button } from \"@material-ui/core\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction CreateAccount() {\n  const history = useHistory();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\"\n  });\n  const [matchingPassword, setMatchingPassword] = useState(false);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prevInfo => {\n      return { ...prevInfo,\n        [name]: value\n      };\n    });\n  } // function comparePassword(e) {\n  //   const { value } = e.target;\n  //   setConfirmPassword(value);\n  //   if (confirmPassword === user.password) {\n  //     setMatchingPassword(true);\n  //   } else {\n  //     setMatchingPassword(false);\n  //   }\n  // }\n\n\n  function submitUserInfo(e) {\n    console.log(\"clicked\");\n    e.preventDefault();\n\n    if (user.confirmPassword === user.Password) {\n      setMatchingPassword(true);\n    } else {\n      setMatchingPassword(false);\n    }\n\n    setUser({\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    }); // Posts new user into DB\n\n    axios.post(\"http://localhost:5000/user/signup\", user).then(res => console.log(res.data)); // Takes user back to homepage.\n\n    history.push(\"/\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HighlightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Create Account\"), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    autoFocus: true,\n    fullWidth: true,\n    label: \"Username\",\n    margin: \"normal\",\n    name: \"username\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    label: \"Email\",\n    margin: \"normal\",\n    name: \"email\",\n    onChange: handleChange,\n    required: true,\n    type: \"email\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onChange: handleChange,\n    required: true,\n    type: \"password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Confirm Password\",\n    margin: \"normal\",\n    name: \"confirmPassword\",\n    onChange: handleChange,\n    required: true,\n    type: \"password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), matchingPassword ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"confirmTextTrue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"* Your password match!\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"confirmTextFalse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"* Your passwords do not match.\"), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    onClick: matchingPassword ? submitUserInfo : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CreateAccount;","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/client/src/components/CreateAccount.jsx"],"names":["React","useState","axios","useHistory","Header","Footer","Container","CssBaseline","Avatar","TextField","Button","HighlightIcon","CreateAccount","history","user","setUser","username","password","confirmPassword","email","matchingPassword","setMatchingPassword","handleChange","e","name","value","target","prevInfo","submitUserInfo","console","log","preventDefault","Password","post","then","res","data","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport {\n  Container,\n  CssBaseline,\n  Avatar,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction CreateAccount() {\n  const history = useHistory();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\",\n  });\n  const [matchingPassword, setMatchingPassword] = useState(false);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setUser((prevInfo) => {\n      return {\n        ...prevInfo,\n        [name]: value,\n      };\n    });\n  }\n\n  // function comparePassword(e) {\n  //   const { value } = e.target;\n  //   setConfirmPassword(value);\n\n  //   if (confirmPassword === user.password) {\n  //     setMatchingPassword(true);\n  //   } else {\n  //     setMatchingPassword(false);\n  //   }\n  // }\n\n  function submitUserInfo(e) {\n    console.log(\"clicked\");\n    e.preventDefault();\n    if (user.confirmPassword === user.Password) {\n      setMatchingPassword(true);\n    } else {\n      setMatchingPassword(false);\n    }\n    setUser({\n      username: \"\",\n      password: \"\",\n      email: \"\",\n    });\n    // Posts new user into DB\n    axios\n      .post(\"http://localhost:5000/user/signup\", user)\n      .then((res) => console.log(res.data));\n\n    // Takes user back to homepage.\n    history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <Header />\n      {/* Material UI */}\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <form>\n          <Avatar>\n            <HighlightIcon />\n          </Avatar>\n          <h1>Create Account</h1>\n          <TextField\n            required\n            autoFocus\n            fullWidth\n            label=\"Username\"\n            margin=\"normal\"\n            name=\"username\"\n            onChange={handleChange}\n            variant=\"outlined\"\n          />\n          <TextField\n            autoFocus\n            fullWidth\n            label=\"Email\"\n            margin=\"normal\"\n            name=\"email\"\n            onChange={handleChange}\n            required={true}\n            type=\"email\"\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            required\n            type=\"password\"\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm Password\"\n            margin=\"normal\"\n            name=\"confirmPassword\"\n            onChange={handleChange}\n            required\n            type=\"password\"\n            variant=\"outlined\"\n          />\n          {matchingPassword ? (\n            <p className=\"confirmTextTrue\">* Your password match!</p>\n          ) : (\n            <p className=\"confirmTextFalse\">* Your passwords do not match.</p>\n          )}\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={matchingPassword ? submitUserInfo : null}\n          >\n            Sign Up\n          </Button>\n        </form>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default CreateAccount;\n"]},"metadata":{},"sourceType":"module"}