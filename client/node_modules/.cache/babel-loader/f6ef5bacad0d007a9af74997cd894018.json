{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/src/components/CreateArea.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction CreateArea(props) {\n  const location = useLocation();\n  const [isExpanded, setIsExpanded] = useState(false); // const [users, setUsers] = useState([]);\n\n  const [note, setNote] = useState({\n    id: \"\",\n    title: \"\",\n    content: \"\"\n  }); // Gets user information from db\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     axios.get(\"http://localhost:5000/user/\").then((response) => {\n  //       setUsers([...response.data]);\n  //     }, 1000);\n  //   });\n  // }, []);\n  // Updating hooks when user types\n\n  function handleChange(e) {\n    const userId = location.state.userId;\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(prevNote => {\n      return { ...prevNote,\n        [name]: value,\n        id: userId\n      };\n    });\n  } // Posting note to db\n\n\n  function submitNote(e) {\n    // Clears user's title and content after user clicks submit button\n    e.preventDefault();\n    setNote({\n      id: \"\",\n      title: \"\",\n      content: \"\"\n    });\n    console.log(note);\n    axios.post(\"http://localhost:5000/user/update\", note).then(res => console.log(res.data));\n  }\n\n  function expand() {\n    setIsExpanded(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, isExpanded ? /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: handleChange,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    onClick: expand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), isExpanded ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })) : null));\n}\n\nexport default CreateArea; // export default class CreateArea extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeContent = this.onChangeContent.bind(this);\n//     this.handleExpandedClick = this.handleExpandedClick.bind(this);\n//     this.handleNotExpandedClick = this.handleNotExpandedClick.bind(this);\n//     this.state = {\n//       title: \"\",\n//       content: \"\",\n//       isExpanded: false,\n//     };\n//   }\n//   // Handles expanding title and button when user clicks note content\n//   handleExpandedClick() {\n//     this.setState({ isExpanded: true });\n//   }\n//   handleNotExpandedClick() {\n//     this.setState({ isExpanded: false });\n//   }\n//   onChangeTitle(e) {\n//     this.setState({\n//       title: e.target.value,\n//     });\n//   }\n//   onChangeContent(e) {\n//     this.setState({\n//       content: e.target.value,\n//     });\n//   }\n//   onSubmit(e) {\n//     e.preventDefault();\n//     const newListItem = {\n//       title: this.state.title,\n//       content: this.state.content,\n//     };\n//     console.log(newListItem);\n//     // Post request to backend\n//     axios\n//       .post(\"http://localhost:5000/list/add\", newListItem)\n//       .then((res) => console.log(res.data));\n//     window.location = \"/\";\n//   }\n//   render() {\n//     const isExpanded = this.state.isExpanded;\n//     return (\n//       <div>\n//         <form>\n//           {isExpanded ? (\n//             <input\n//               onChange={this.onChangeTitle}\n//               name=\"title\"\n//               placeholder=\"Title\"\n//               value={this.state.title}\n//             />\n//           ) : null}\n//           <textarea\n//             onChange={this.onChangeContent}\n//             name=\"content\"\n//             placeholder=\"Take a note...\"\n//             rows=\"3\"\n//             value={this.state.content}\n//             onClick={this.handleExpandedClick}\n//           />\n//           {isExpanded ? (\n//             <button onClick={this.onSubmit.bind(this)}>\n//               <span>\n//                 <AddIcon />\n//               </span>\n//             </button>\n//           ) : null}\n//         </form>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/src/components/CreateArea.jsx"],"names":["React","useState","useEffect","useLocation","axios","AddIcon","CreateArea","props","location","isExpanded","setIsExpanded","note","setNote","id","title","content","handleChange","e","userId","state","name","value","target","prevNote","submitNote","preventDefault","console","log","post","then","res","data","expand"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction CreateArea(props) {\n  const location = useLocation();\n  const [isExpanded, setIsExpanded] = useState(false);\n  // const [users, setUsers] = useState([]);\n\n  const [note, setNote] = useState({\n    id: \"\",\n    title: \"\",\n    content: \"\",\n  });\n\n  // Gets user information from db\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     axios.get(\"http://localhost:5000/user/\").then((response) => {\n  //       setUsers([...response.data]);\n  //     }, 1000);\n  //   });\n  // }, []);\n\n  // Updating hooks when user types\n  function handleChange(e) {\n    const userId = location.state.userId;\n    const { name, value } = e.target;\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value,\n        id: userId,\n      };\n    });\n  }\n\n  // Posting note to db\n  function submitNote(e) {\n    // Clears user's title and content after user clicks submit button\n    e.preventDefault();\n    setNote({\n      id: \"\",\n      title: \"\",\n      content: \"\",\n    });\n    console.log(note);\n    axios\n      .post(\"http://localhost:5000/user/update\", note)\n      .then((res) => console.log(res.data));\n  }\n\n  function expand() {\n    setIsExpanded(true);\n  }\n\n  return (\n    <div>\n      <form>\n        {isExpanded ? (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        ) : null}\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          onClick={expand}\n        />\n        {isExpanded ? (\n          <button onClick={submitNote}>\n            <AddIcon />\n          </button>\n        ) : null}\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n\n// export default class CreateArea extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.onChangeTitle = this.onChangeTitle.bind(this);\n//     this.onChangeContent = this.onChangeContent.bind(this);\n//     this.handleExpandedClick = this.handleExpandedClick.bind(this);\n//     this.handleNotExpandedClick = this.handleNotExpandedClick.bind(this);\n\n//     this.state = {\n//       title: \"\",\n//       content: \"\",\n//       isExpanded: false,\n//     };\n//   }\n//   // Handles expanding title and button when user clicks note content\n//   handleExpandedClick() {\n//     this.setState({ isExpanded: true });\n//   }\n\n//   handleNotExpandedClick() {\n//     this.setState({ isExpanded: false });\n//   }\n\n//   onChangeTitle(e) {\n//     this.setState({\n//       title: e.target.value,\n//     });\n//   }\n\n//   onChangeContent(e) {\n//     this.setState({\n//       content: e.target.value,\n//     });\n//   }\n\n//   onSubmit(e) {\n//     e.preventDefault();\n\n//     const newListItem = {\n//       title: this.state.title,\n//       content: this.state.content,\n//     };\n\n//     console.log(newListItem);\n\n//     // Post request to backend\n//     axios\n//       .post(\"http://localhost:5000/list/add\", newListItem)\n//       .then((res) => console.log(res.data));\n\n//     window.location = \"/\";\n//   }\n\n//   render() {\n//     const isExpanded = this.state.isExpanded;\n//     return (\n//       <div>\n//         <form>\n//           {isExpanded ? (\n//             <input\n//               onChange={this.onChangeTitle}\n//               name=\"title\"\n//               placeholder=\"Title\"\n//               value={this.state.title}\n//             />\n//           ) : null}\n\n//           <textarea\n//             onChange={this.onChangeContent}\n//             name=\"content\"\n//             placeholder=\"Take a note...\"\n//             rows=\"3\"\n//             value={this.state.content}\n//             onClick={this.handleExpandedClick}\n//           />\n\n//           {isExpanded ? (\n//             <button onClick={this.onSubmit.bind(this)}>\n//               <span>\n//                 <AddIcon />\n//               </span>\n//             </button>\n//           ) : null}\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}