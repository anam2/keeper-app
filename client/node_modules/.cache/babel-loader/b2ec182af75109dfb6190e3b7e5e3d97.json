{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/src/components/CreateArea.jsx\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction CreateArea(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  console.log(\"id: \" + props.match.params.id);\n  const [note, setNote] = useState({\n    id: \"\",\n    title: \"\",\n    content: \"\"\n  }); // Updating hooks when user types\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(prevNote => {\n      return { ...prevNote,\n        [name]: value\n      };\n    });\n  } // Posting note to db\n\n\n  function submitNote(e) {\n    e.preventDefault(); // Clears user's title and content after user clicks submit button\n\n    setNote({\n      id: \"\",\n      title: \"\",\n      content: \"\"\n    });\n    axios.post(\"http://localhost:5000/user/update\", note).then(res => console.log(res.data));\n  }\n\n  function expand() {\n    setIsExpanded(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, isExpanded ? /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: handleChange,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    onClick: expand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), isExpanded ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })) : null));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/src/components/CreateArea.jsx"],"names":["React","useState","axios","AddIcon","CreateArea","props","isExpanded","setIsExpanded","console","log","match","params","id","note","setNote","title","content","handleChange","e","name","value","target","prevNote","submitNote","preventDefault","post","then","res","data","expand"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,SAASJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAAxC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC/BW,IAAAA,EAAE,EAAE,EAD2B;AAE/BG,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,OAAO,EAAE;AAHsB,GAAD,CAAhC,CALyB,CAWzB;;AACA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,OAAO,CAAEQ,QAAD,IAAc;AACpB,aAAO,EACL,GAAGA,QADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALM,CAAP;AAMD,GApBwB,CAsBzB;;;AACA,WAASG,UAAT,CAAoBL,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACM,cAAF,GADqB,CAErB;;AAEAV,IAAAA,OAAO,CAAC;AACNF,MAAAA,EAAE,EAAE,EADE;AAENG,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAAD,CAAP;AAKAd,IAAAA,KAAK,CACFuB,IADH,CACQ,mCADR,EAC6CZ,IAD7C,EAEGa,IAFH,CAESC,GAAD,IAASnB,OAAO,CAACC,GAAR,CAAYkB,GAAG,CAACC,IAAhB,CAFjB;AAGD;;AAED,WAASC,MAAT,GAAkB;AAChBtB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,gBACT;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAEW,YAFZ;AAGE,IAAA,KAAK,EAAEJ,IAAI,CAACE,KAHd;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAOP,IARN,eAUE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAEE,YAFZ;AAGE,IAAA,KAAK,EAAEJ,IAAI,CAACG,OAHd;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,IAAI,EAAC,GALP;AAME,IAAA,OAAO,EAAEa,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAkBGvB,UAAU,gBACT;AAAQ,IAAA,OAAO,EAAEiB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADS,GAIP,IAtBN,CADF,CADF;AA4BD;;AAED,eAAenB,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction CreateArea(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  console.log(\"id: \" + props.match.params.id);\n\n  const [note, setNote] = useState({\n    id: \"\",\n    title: \"\",\n    content: \"\",\n  });\n\n  // Updating hooks when user types\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value,\n      };\n    });\n  }\n\n  // Posting note to db\n  function submitNote(e) {\n    e.preventDefault();\n    // Clears user's title and content after user clicks submit button\n\n    setNote({\n      id: \"\",\n      title: \"\",\n      content: \"\",\n    });\n    axios\n      .post(\"http://localhost:5000/user/update\", note)\n      .then((res) => console.log(res.data));\n  }\n\n  function expand() {\n    setIsExpanded(true);\n  }\n\n  return (\n    <div>\n      <form>\n        {isExpanded ? (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        ) : null}\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          onClick={expand}\n        />\n        {isExpanded ? (\n          <button onClick={submitNote}>\n            <AddIcon />\n          </button>\n        ) : null}\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}