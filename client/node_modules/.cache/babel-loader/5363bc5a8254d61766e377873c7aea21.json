{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/client/src/components/NoteDashboard.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  // Gets userID from the paramter\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([{\n    title: \"\",\n    content: \"\"\n  }]); //  Gets user information from db\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     axios.get(\"/user\").then((response) => {\n  //       const currentUser = response.data.find((user) => user._id === userId);\n  //       const currentTodoList = currentUser.todoList;\n  //       setCurrentNotes(currentTodoList);\n  //     }, 1000);\n  //   });\n  // }, [userId]);\n  // useEffect(() => {\n  //   axios.get(\"/user\").then((response) => {\n  //     const currentUser = response.data.find((user) => user._id === userId);\n  //     const currentTodoList = currentUser.todoList;\n  //     setCurrentNotes(currentTodoList);\n  //   });\n  // });\n  // Deletes Note\n\n  function deleteNote(currentUserId, currentNoteId) {\n    axios.delete(\"/user/delete/\" + currentUserId + \"/\" + currentNoteId).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err));\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    id: userId,\n    key: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), currentNotes.map((note, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      userId: userId,\n      noteId: note._id,\n      title: note.title,\n      content: note.content,\n      deleteNote: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NoteDashboard;","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/client/src/components/NoteDashboard.jsx"],"names":["React","useState","useEffect","axios","Header","Footer","CreateArea","Note","NoteDashboard","props","userId","match","params","id","currentNotes","setCurrentNotes","title","content","deleteNote","currentUserId","currentNoteId","delete","then","response","console","log","catch","err","window","location","reload","map","note","index","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACA,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAC/C;AACEe,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,OAAO,EAAE;AAFX,GAD+C,CAAD,CAAhD,CAH4B,CAU5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAASC,UAAT,CAAoBC,aAApB,EAAmCC,aAAnC,EAAkD;AAChDjB,IAAAA,KAAK,CACFkB,MADH,CACU,kBAAkBF,aAAlB,GAAkC,GAAlC,GAAwCC,aADlD,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAJH,EAKGG,KALH,CAKUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CALlB;AAMAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEpB,MAAhB;AAAwB,IAAA,GAAG,EAAEA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGI,YAAY,CAACiB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,MAAM,EAAEvB,MAFV;AAGE,MAAA,MAAM,EAAEsB,IAAI,CAACE,GAHf;AAIE,MAAA,KAAK,EAAEF,IAAI,CAAChB,KAJd;AAKE,MAAA,OAAO,EAAEgB,IAAI,CAACf,OALhB;AAME,MAAA,UAAU,EAAEC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CAHH,eAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD;;AAED,eAAeV,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  // Gets userID from the paramter\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([\n    {\n      title: \"\",\n      content: \"\",\n    },\n  ]);\n\n  //  Gets user information from db\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     axios.get(\"/user\").then((response) => {\n  //       const currentUser = response.data.find((user) => user._id === userId);\n  //       const currentTodoList = currentUser.todoList;\n  //       setCurrentNotes(currentTodoList);\n  //     }, 1000);\n  //   });\n  // }, [userId]);\n\n  // useEffect(() => {\n  //   axios.get(\"/user\").then((response) => {\n  //     const currentUser = response.data.find((user) => user._id === userId);\n  //     const currentTodoList = currentUser.todoList;\n  //     setCurrentNotes(currentTodoList);\n  //   });\n  // });\n\n  // Deletes Note\n  function deleteNote(currentUserId, currentNoteId) {\n    axios\n      .delete(\"/user/delete/\" + currentUserId + \"/\" + currentNoteId)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((err) => console.log(err));\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea id={userId} key={userId} />\n      {currentNotes.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            userId={userId}\n            noteId={note._id}\n            title={note.title}\n            content={note.content}\n            deleteNote={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoteDashboard;\n"]},"metadata":{},"sourceType":"module"}