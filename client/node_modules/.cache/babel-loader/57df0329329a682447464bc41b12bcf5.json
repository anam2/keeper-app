{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/src/components/NoteDashboard.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  const [notes, setNotes] = useState([]);\n  const [test, setTest] = useState([1, 2, 3, 4, 5]); // Receives data from backend\n  // Equivilent to componendDidMount componentDidUpdate\n  // Adding [] at the end makes it act like componentDidMount, runs only once\n\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"http://localhost:5000/list/\").then(response => {\n        setNotes([response.data]);\n      }, 1000);\n    });\n  }, []);\n  Array.isArray(notes) && test.map((currentNote, index) => {\n    console.log(currentNote);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NoteDashboard; // export default class NoteDashboard extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <CreateArea />\n//         <Note />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/src/components/NoteDashboard.jsx"],"names":["React","useState","useEffect","axios","Header","Footer","CreateArea","Note","NoteDashboard","props","notes","setNotes","test","setTest","setTimeout","get","then","response","data","Array","isArray","map","currentNote","index","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAhC,CAF4B,CAI5B;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,MAAM;AACfX,MAAAA,KAAK,CAACY,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC1DN,QAAAA,QAAQ,CAAC,CAACM,QAAQ,CAACC,IAAV,CAAD,CAAR;AACD,OAFD,EAEG,IAFH;AAGD,KAJS,CAAV;AAKD,GANQ,EAMN,EANM,CAAT;AAQAC,EAAAA,KAAK,CAACC,OAAN,CAAcV,KAAd,KACEE,IAAI,CAACS,GAAL,CAAS,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,GAFD,CADF;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;;AAED,eAAed,aAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  const [notes, setNotes] = useState([]);\n  const [test, setTest] = useState([1, 2, 3, 4, 5]);\n\n  // Receives data from backend\n  // Equivilent to componendDidMount componentDidUpdate\n  // Adding [] at the end makes it act like componentDidMount, runs only once\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"http://localhost:5000/list/\").then((response) => {\n        setNotes([response.data]);\n      }, 1000);\n    });\n  }, []);\n\n  Array.isArray(notes) &&\n    test.map((currentNote, index) => {\n      console.log(currentNote);\n    });\n\n  return (\n    <div>\n      <Header />\n      <CreateArea />\n      {/* {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n          />\n        );\n      })} */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoteDashboard;\n\n// export default class NoteDashboard extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {};\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <CreateArea />\n//         <Note />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}