{"ast":null,"code":"import _slicedToArray from\"/Users/andynam/Code/react/keeper-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import axios from\"axios\";import Header from\"./Header\";import Footer from\"./Footer\";import CreateArea from\"./CreateArea\";import Note from\"./Note\";function NoteDashboard(props){// Gets userID from the paramter\nvar userId=props.match.params.id;var _useState=useState([{title:\"\",content:\"\"}]),_useState2=_slicedToArray(_useState,2),currentNotes=_useState2[0],setCurrentNotes=_useState2[1];// Gets user information from DB\nuseState(function(){axios.get(\"/user\").then(function(response){var currentUser=response.data.find(function(user){return user._id===userId;});var currentTodoList=currentUser.todoList;setCurrentNotes(currentTodoList);});},[userId]);// Deletes Note\nfunction deleteNote(currentUserId,currentNoteId){axios.delete(\"/user/delete/\"+currentUserId+\"/\"+currentNoteId).then(function(response){console.log(response);}).catch(function(err){return console.log(err);});window.location.reload();}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(CreateArea,{id:userId,key:userId}),currentNotes.map(function(note,index){return/*#__PURE__*/React.createElement(Note,{key:index,userId:userId,noteId:note._id,title:note.title,content:note.content,deleteNote:deleteNote});}),/*#__PURE__*/React.createElement(Footer,null));}export default NoteDashboard;","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/client/src/components/NoteDashboard.jsx"],"names":["React","useState","axios","Header","Footer","CreateArea","Note","NoteDashboard","props","userId","match","params","id","title","content","currentNotes","setCurrentNotes","get","then","response","currentUser","data","find","user","_id","currentTodoList","todoList","deleteNote","currentUserId","currentNoteId","delete","console","log","catch","err","window","location","reload","map","note","index"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B;AACA,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC,CAF4B,cAGYX,QAAQ,CAAC,CAC/C,CACEY,KAAK,CAAE,EADT,CAEEC,OAAO,CAAE,EAFX,CAD+C,CAAD,CAHpB,wCAGrBC,YAHqB,eAGPC,eAHO,eAU5B;AACAf,QAAQ,CAAC,UAAM,CACbC,KAAK,CAACe,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwB,SAACC,QAAD,CAAc,CACpC,GAAMC,CAAAA,WAAW,CAAGD,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaf,MAAvB,EAAnB,CAApB,CACA,GAAMgB,CAAAA,eAAe,CAAGL,WAAW,CAACM,QAApC,CACAV,eAAe,CAACS,eAAD,CAAf,CACD,CAJD,EAKD,CANO,CAML,CAAChB,MAAD,CANK,CAAR,CAQA;AACA,QAASkB,CAAAA,UAAT,CAAoBC,aAApB,CAAmCC,aAAnC,CAAkD,CAChD3B,KAAK,CACF4B,MADH,CACU,gBAAkBF,aAAlB,CAAkC,GAAlC,CAAwCC,aADlD,EAEGX,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBY,OAAO,CAACC,GAAR,CAAYb,QAAZ,EACD,CAJH,EAKGc,KALH,CAKS,SAACC,GAAD,QAASH,CAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAT,EALT,EAMAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAED,mBACE,4CACE,oBAAC,MAAD,MADF,cAEE,oBAAC,UAAD,EAAY,EAAE,CAAE5B,MAAhB,CAAwB,GAAG,CAAEA,MAA7B,EAFF,CAGGM,YAAY,CAACuB,GAAb,CAAiB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACjC,mBACE,oBAAC,IAAD,EACE,GAAG,CAAEA,KADP,CAEE,MAAM,CAAE/B,MAFV,CAGE,MAAM,CAAE8B,IAAI,CAACf,GAHf,CAIE,KAAK,CAAEe,IAAI,CAAC1B,KAJd,CAKE,OAAO,CAAE0B,IAAI,CAACzB,OALhB,CAME,UAAU,CAAEa,UANd,EADF,CAUD,CAXA,CAHH,cAeE,oBAAC,MAAD,MAfF,CADF,CAmBD,CAED,cAAepB,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  // Gets userID from the paramter\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([\n    {\n      title: \"\",\n      content: \"\",\n    },\n  ]);\n\n  // Gets user information from DB\n  useState(() => {\n    axios.get(\"/user\").then((response) => {\n      const currentUser = response.data.find((user) => user._id === userId);\n      const currentTodoList = currentUser.todoList;\n      setCurrentNotes(currentTodoList);\n    });\n  }, [userId]);\n\n  // Deletes Note\n  function deleteNote(currentUserId, currentNoteId) {\n    axios\n      .delete(\"/user/delete/\" + currentUserId + \"/\" + currentNoteId)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((err) => console.log(err));\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea id={userId} key={userId} />\n      {currentNotes.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            userId={userId}\n            noteId={note._id}\n            title={note.title}\n            content={note.content}\n            deleteNote={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoteDashboard;\n"]},"metadata":{},"sourceType":"module"}