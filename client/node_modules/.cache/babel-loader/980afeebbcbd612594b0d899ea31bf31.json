{"ast":null,"code":"var _jsxFileName = \"/Users/andynam/Code/react/keeper-app/src/components/NoteDashboard.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([{\n    title: \"\",\n    content: \"\"\n  }]); //  Gets user information from db\n\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"http://localhost:5000/user/\").then(response => {\n        const currentUser = response.data.find(user => user._id === userId);\n        const currentTodoList = currentUser.todoList;\n        setCurrentNotes(currentTodoList);\n      }, 1000);\n    });\n  }, [userId]);\n\n  function deleteNote(currentUserId, noteId) {\n    axios.delete(\"http://localhost:5000/user/delete/\" + currentUserId + \"/\" + noteId).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err));\n    axios.get(\"http://localhost:5000/user/\").then(response => {\n      const currentUser = response.data.find(user => user._id === currentUserId);\n      const currentTodoList = currentUser.todoList;\n      setCurrentNotes(currentTodoList);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    id: userId,\n    key: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), currentNotes.map((note, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      userId: userId,\n      noteId: note._id,\n      title: note.title,\n      content: note.content,\n      deleteNote: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default NoteDashboard;","map":{"version":3,"sources":["/Users/andynam/Code/react/keeper-app/src/components/NoteDashboard.jsx"],"names":["React","useState","useEffect","axios","Header","Footer","CreateArea","Note","NoteDashboard","props","userId","match","params","id","currentNotes","setCurrentNotes","title","content","setTimeout","get","then","response","currentUser","data","find","user","_id","currentTodoList","todoList","deleteNote","currentUserId","noteId","delete","console","log","catch","err","map","note","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAC/C;AACEe,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,OAAO,EAAE;AAFX,GAD+C,CAAD,CAAhD,CAF4B,CAS5B;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU,CAAC,MAAM;AACff,MAAAA,KAAK,CAACgB,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC1D,cAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAahB,MAA1C,CAApB;AACA,cAAMiB,eAAe,GAAGL,WAAW,CAACM,QAApC;AACAb,QAAAA,eAAe,CAACY,eAAD,CAAf;AACD,OAJD,EAIG,IAJH;AAKD,KANS,CAAV;AAOD,GARQ,EAQN,CAACjB,MAAD,CARM,CAAT;;AAUA,WAASmB,UAAT,CAAoBC,aAApB,EAAmCC,MAAnC,EAA2C;AACzC5B,IAAAA,KAAK,CACF6B,MADH,CAEI,uCAAuCF,aAAvC,GAAuD,GAAvD,GAA6DC,MAFjE,EAIGX,IAJH,CAISC,QAAD,IAAc;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACD,KANH,EAOGc,KAPH,CAOUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAPlB;AASAjC,IAAAA,KAAK,CAACgB,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC1D,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAAd,CACjBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaI,aADL,CAApB;AAGA,YAAMH,eAAe,GAAGL,WAAW,CAACM,QAApC;AACAb,MAAAA,eAAe,CAACY,eAAD,CAAf;AACD,KAND;AAOD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEjB,MAAhB;AAAwB,IAAA,GAAG,EAAEA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGI,YAAY,CAACuB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,MAAM,EAAE7B,MAFV;AAGE,MAAA,MAAM,EAAE4B,IAAI,CAACZ,GAHf;AAIE,MAAA,KAAK,EAAEY,IAAI,CAACtB,KAJd;AAKE,MAAA,OAAO,EAAEsB,IAAI,CAACrB,OALhB;AAME,MAAA,UAAU,EAAEY,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CAHH,eAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD;;AAED,eAAerB,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport Note from \"./Note\";\n\nfunction NoteDashboard(props) {\n  const userId = props.match.params.id;\n  const [currentNotes, setCurrentNotes] = useState([\n    {\n      title: \"\",\n      content: \"\",\n    },\n  ]);\n\n  //  Gets user information from db\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get(\"http://localhost:5000/user/\").then((response) => {\n        const currentUser = response.data.find((user) => user._id === userId);\n        const currentTodoList = currentUser.todoList;\n        setCurrentNotes(currentTodoList);\n      }, 1000);\n    });\n  }, [userId]);\n\n  function deleteNote(currentUserId, noteId) {\n    axios\n      .delete(\n        \"http://localhost:5000/user/delete/\" + currentUserId + \"/\" + noteId\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((err) => console.log(err));\n\n    axios.get(\"http://localhost:5000/user/\").then((response) => {\n      const currentUser = response.data.find(\n        (user) => user._id === currentUserId\n      );\n      const currentTodoList = currentUser.todoList;\n      setCurrentNotes(currentTodoList);\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea id={userId} key={userId} />\n      {currentNotes.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            userId={userId}\n            noteId={note._id}\n            title={note.title}\n            content={note.content}\n            deleteNote={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoteDashboard;\n"]},"metadata":{},"sourceType":"module"}